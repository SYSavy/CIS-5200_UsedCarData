
/*You need to remotely access your Oracle Big Data that you executed in your Oracle Cloud account using ssh. Your CalStateLA username(syadav5) should be a username/password to connect to the Hadoop cluster at BDCE as follows:*/


$ ssh syadav5@129.150.69.91

/* Use the following command to change the directory. */

$ cd dev/shm/


/* Below is the location of the CarGurus usedcar data that is used for this project. You can download the data file from amazon S3 as follows: */


$ wget -O CarData.zip http://usedcardataset.s3.amazonaws.com/archive.zip

//Then, you need to unzip the files.

$ unzip CarData.zip


//Create directories in HDFS

$ hdfs dfs -mkdir GP2TermProject
$ hdfs dfs -mkdir GP2TermProject/tables
$ hdfs dfs -mkdir GP2TermProject/tables/cgdata
$ hdfs dfs -ls GP2TermProject/tables
$ hdfs dfs -put /dev/shm/used_cars_data.csv GP2TermProject/tables/cgdata/
$ hdfs dfs -ls GP2TermProject/tables/cgdata/
$ hdfs dfs -chmod -R o+w GP2TermProject/


// Open beeline Command Line Interface using the following command to run hive queries.


$ beeline
jdbc:hive2://bigdai-nov-bdcsce-1:2181,bigdai-nov-bdcsce-2:2181,bigdai-nov-bdcsce-3:2181/;serviceDi
scoveryMode=zooKeeper;zooKeeperNamespace=hiveserver2?tez.queue.name=interactive
bdcsce_admin


//You have to use your username instead of "syadav5".

use syadav5;


// query to create "cargurus_usedcars" table 


DROP TABLE IF EXISTS cargurus_usedcars;

NOTE: Don’t forget to replace "syadav5" to your account name in the following HQL code.

CREATE EXTERNAL TABLE IF NOT EXISTS cargurus_usedcars(vin string, back_legroom string, bed string,bed_height string, bed_length string, body_type string, cabin string, city string, city_fuel_economy float, combine_fuel_economy int, daysonmarket int, 
dealer_zip string, description string, engine_cylinders string, engine_displacement float, engine_type string, exterior_dolor 
string, fleet string, frame_damaged string, franchise_dealer string, franchise_make string, front_legroom string, fuel_tank_volume 
string, fuel_type string, has_accidents string, height string, highway_fuel_economy float, horsepower int, interior_color string, 
iscab string, is_certified string, is_cpo string, is_new boolean, is_oemcpo string, latitude double, length string, listed_date 
date, listing_color string, listing_id bigint, longitude double, main_picture_url string, major_options string, make_name string,
 maximum_seating string, mileage float, model_name string, owner_count int, power string, price float, salvage string, savings_amount int, seller_rating float, sp_id bigint, sp_name string, theft_title string, torque string, transmission string, 
transmission_display string, trimid string, trim_name string, vehicle_damage_category string, wheel_system string, 
wheel_system_display string, wheelbase string, width string, year int) ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.OpenCSVSerde' WITH SERDEPROPERTIES ("separatorChar" = "," , "quoteChar" = "\"") STORED AS TEXTFILE 
LOCATION '/user/syadav5/GP2TermProject/tables/cgdata/' TBLPROPERTIES ('skip.header.line.count' = '1');



// Creating Hive tables to query data:

/* Usecase1: The below command will create a table based on the make and model of the car which has more seller ratings in the past 5 years. */


NOTE: Don’t forget to replace "hparekh2" to your account name in the following HQL code.

CREATE EXTERNAL TABLE IF NOT EXISTS car_rating ( make_name string, model_name string,year int, seller_rating string)ROW FORMAT 
DELIMITED FIELDS TERMINATED BY ',' STORED AS TEXTFILE LOCATION '/user/hparekh2/GP2TermProject/tables/car_rating/';

INSERT OVERWRITE TABLE car_rating Select make_name, model_name, year, AVG(seller_rating) FROM cargurus_usedcars WHERE year >= 2015 
and year <= 2020 GROUP BY make_name, model_name, year;

Select * from car_rating LIMIT 5;



 /* Usecase 2: The below command provides N-gram sentiment analysis of top seller rating cars. */

Create table bigram_analysis(new_ar array<struct<ngram:array<string>, estfrequency:double>>);

INSERT OVERWRITE TABLE bigram_analysis Select context_ngrams(sentences(lower(description)), array(null,null),100)as bigram
FROM cargurus_usedcars WHERE make_name IN ('Lotus','Bentley', 'Ferrari', 'Karma', 'Lamborghini', 'Rolls-Royce', 'Porsche',
 'McLaren', 'Aston Martin', 'smart', 'MINI', 'Jaguar', 'Tesla', 'Lexus', 'Audi', 'Land Rover', 'Mercedes') AND year >= 2015;

NOTE: Don’t forget to replace "hparekh2" to your account name in the following HQL code.

Create table frequency_bigram (ngram string, estfrequency double) ROW FORMAT DELIMITED FIELDS TERMINATED BY ',' STORED AS TEXTFILE 
LOCATION '/user/hparekh2/GP2TermProject/tables/ngramAnalysis/';

Insert overwrite table frequency_bigram Select concat(X.ngram[0], ' ',X.ngram[1]) as bigram, X.estfrequency From bigram_analysis 
LATERAL VIEW explode(new_ar) Z as X;

select * from frequency_bigram limit 10;


/* Usecase 3: The below query will create a table based on the inventory of cars based on body type and price range for the past 5 years. */


CREATE TABLE carsPriceRange AS select body_type, price , case when price > 0 and price < 10000 then '0 - 10000' when price > 10000 and price < 20000 then '10000 - 20000' when price > 20000 and price < 30000 then '20000 - 30000' when price > 30000 and price < 
40000 then '30000 - 40000' when price > 40000 and price < 50000 then '40000 - 50000' when price > 50000 and price < 60000 then '50000 - 60000' when price > 60000 and price < 70000 then '60000 - 70000' when price > 70000 and price < 80000 then '70000 - 80000' 
when price > 80000 and price < 90000 then '80000 - 90000' else '90000 - above' end as price_range from cargurus_usedcars where 
body_type != '' and year >= 2015 and year <= 2020;


select * from carsPriceRange limit 10;

NOTE: Don’t forget to replace "pramdas2" to your account name in the following HQL code.

CREATE EXTERNAL TABLE IF NOT EXISTS CarsPriceRangeByBodyType(price_range string, body_type
string,Car_count string) ROW FORMAT DELIMITED FIELDS TERMINATED BY ',' STORED AS TEXTFILE
LOCATION '/user/pramdas2/GP2TermProject/tables/CarsPriceRangeByBodyType/';

INSERT OVERWRITE TABLE CarsPriceRangeByBodyType select price_range,body_type,count(price_range) from carsPriceRange group by 
price_range,body_type order by price_range;


select * from CarsPriceRangeByBodyType limit 10;


/* Usecase 4:  The below command will create a table based on the make and model of the car to check which will take longer time to sell. */



CREATE TABLE daysonmarketbydays AS select make_name,model_name, case when daysonmarket > 0 and daysonmarket < 91 then '0 - 91' when 
daysonmarket > 91 and daysonmarket < 182 then '91 - 182' when daysonmarket > 182 and daysonmarket < 365 then '182 - 365' else '365 
- above' end as days_range from cargurus_usedcars where body_type != '' and year >= 2015 and year <= 2020;

select * from daysonmarketbydays limit 10;

NOTE: Don’t forget to replace "ssuryaw" to your account name in the following HQL code.

CREATE EXTERNAL TABLE IF NOT EXISTS car_market_days_range(make_name string,model_name string,days_range string ,Car_count string) 
ROW FORMAT DELIMITED FIELDS TERMINATED BY ',' STORED AS TEXTFILE LOCATION '/user/ssuryaw/GP2TermProject/tables/
CarsdaysRangeByMake/';

INSERT OVERWRITE TABLE car_market_days_range select make_name,model_name,days_range,count(days_range) from daysonmarketbydays group 
by make_name,model_name,days_range order by days_range;

select * from car_market_days_range limit 10;



/* Usecase 5: The below command will create a table based on the inventory of cars having more accidents.  */

NOTE: Don’t forget to replace "ssuryaw" to your account name in the following HQL code.

CREATE EXTERNAL TABLE IF NOT EXISTS car_has_accidents_model ( make_name string, model_name string,year int, car_has_accidents 
string, has_accidents_count string) ROW FORMAT DELIMITED FIELDS TERMINATED BY ',' STORED AS TEXTFILE LOCATION '/user/ssuryaw/
GP2TermProject/tables/CarsHasAccidentByMake/' ;

INSERT OVERWRITE TABLE car_has_accidents_model Select make_name, model_name, year,has_accidents, count(has_accidents) FROM 
cargurus_usedcars WHERE year >= 2005 and year <= 2020 GROUP BY make_name, model_name, year , has_accidents;

select * from car_has_accidents_model limit 10;



/* Use case 6: The below command will create a table based on the inventory of used cars by body type. */

NOTE: Don’t forget to replace "vmuthup" to your account name in the following HQL code.


CREATE TABLE IF NOT EXISTS count_by_bodytype ROW FORMAT DELIMITED FIELDS TERMINATED BY
":" STORED AS TEXTFILE LOCATION "/user/vmuthup/GP2TermProject/tables/bodytype" AS select body_type as BodyType, count(vin) as total from 
cargurus_usedcars group by body_type having count(vin) > 100 and trim(body_type) != '' and body_type is NOT NULL order by body_type;


/* Usecase 7: The below command will create a table showing inventory of used cars by year. */

NOTE: Don’t forget to replace "hparekh2" to your account name in the following HQL code.

CREATE EXTERNAL TABLE IF NOT EXISTS inventory_car (year int, no_of_cars int) ROW FORMAT
DELIMITED FIELDS TERMINATED BY ',' STORED AS TEXTFILE LOCATION '/user/hparekh2/GP2TermProject/tables/inventory_car';

INSERT OVERWRITE TABLE inventory_car SELECT year, Count(*) FROM cargurus_usedcars WHERE
year > 2005 GROUP BY year;

select * from inventory_car limit 10;


/* Usecase 8: The below command will create a table showing inventory of used cars by body styles and geographical location of the past ten years. */

NOTE: Don’t forget to replace "syadav5" to your account name in the following HQL code.

CREATE EXTERNAL TABLE IF NOT EXISTS bodystyle_region(body_type string, city string, latitude string, longitude string, make_name 
string, year string) ROW FORMAT DELIMITED FIELDS TERMINATED BY ',' STORED AS TEXTFILE LOCATION '/user/syadav5/GP2TermProject/tables/bodystyle_region/';
 

INSERT OVERWRITE TABLE bodystyle_region SELECT body_type, city, latitude, longitude, make_name, year from cargurus_usedcars where 
body_type != ' ' and year >= 2010 and year <= 2020 and year != ' ';





